/*
 * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
 *
 * Run `npx ets` or `yarn ets` to regenerate this file.
 * Source: ./autoPilotPlanner1.ets
 */
/* eslint-disable */

interface Props {
  message: string;
  references: string[];
  tools: string[];
  exampleJson: any[];
}

export default function (props: Props): string {
  let result = "";
  result += props.references.join("\n\n");
  result += "\n=======\nUser's request: ";
  result += props.message;
  result +=
    '\n\n======\n\nThink step by step to come up with a plan of action. \n- if you are using a web API, you may want to check on the latest API docs\n- if there are common follow-up steps to the request the user may not have thought of,\n  you may want to add those to the plan\n\nOutput Format schema - either a list of tools to invoke and files to read:\n{\n  "plan": [ "your best guess on what to do next" ],\n  "tools": [ { "name": "name of tool", "input": ["args"] } ]\n}\n\nOr a list of files to edit, if you have all the context you need to fulfill the request:\n{\n  "plan": [ "array of steps of changes to make" ],\n  "edits": {\n    "path/to/file": "detailed summary of changes the AI should make"\n  },\n  "references": [\n    "up to 3 files the AI should refer to for examples"\n  ]\n}\n\nIf you are not able to fulfill the request:\n{\n  "failure": "reason why you cannot fulfill the request"\n}\n\nAll tools you can use:\n';
  result += props.tools.join("\n");
  result += "\n\nSome example plans based on the request provided:\n";
  result += props.exampleJson.map((obj) => JSON.stringify(obj)).join("\n\n");
  result += "\n\nAlways follow this JSON format. Your output:";
  return result;
}
